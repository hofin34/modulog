CMAKE_MINIMUM_REQUIRED(VERSION 3.20)
PROJECT(modulog)
SET(CMAKE_CXX_STANDARD 17)
SET(modulog_VERSION 1.0.0)

IF (CMAKE_BUILD_TYPE MATCHES DEBUG)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -O1 -fno-omit-frame-pointer -g")
ENDIF ()


# for linking .so after make install (we have ba_logger):
SET(CMAKE_SKIP_BUILD_RPATH FALSE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
SET(CMAKE_INSTALL_RPATH lib)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

OPTION(BRINGAUTO_BUILD_DEP "Build all dependencies" ON)
OPTION(BRINGAUTO_TESTS "Tests" OFF)
OPTION(BRINGAUTO_INSTALL "Install" OFF)
OPTION(BRINGAUTO_PACKAGE "Create package" OFF)
OPTION(BRINGAUTO_SYSTEM_DEP "Use system dependencies" OFF)


IF (BRINGAUTO_TESTS)
    ADD_COMPILE_DEFINITIONS(BRINGAUTO_TESTS=TRUE) # if this macro defined, SmurfState library included in modulog
    IF (BRINGAUTO_PACKAGE OR BRINGAUTO_INSTALL)
        MESSAGE(FATAL_ERROR "You cannot install or create package with BRINGAUTO_TESTS enabled")
    ENDIF ()
ENDIF ()
IF (BRINGAUTO_PACKAGE)
    IF (NOT BRINGAUTO_INSTALL)
        MESSAGE(WARNING "BRINGAUTO_PACKAGE is ON, so BRINGAUTO_INSTALL is also ON")
        SET(BRINGAUTO_INSTALL ON)
    ENDIF ()
ENDIF ()


SET(AG_BUILT_LIST ${CMAKE_CURRENT_BINARY_DIR}/agents-enabled.conf)

INCLUDE(cmake/Dependencies.cmake)

ADD_EXECUTABLE(modulog main.cpp)


ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(communication)
ADD_SUBDIRECTORY(meta-lib)
ADD_SUBDIRECTORY(agent-client)
ADD_SUBDIRECTORY(agents)


TARGET_LINK_LIBRARIES(modulog CoreLib cxxopts::cxxopts)

IF (BRINGAUTO_TESTS)
    ENABLE_TESTING()
    FetchContent_MakeAvailable(statesmurf)
    ADD_SUBDIRECTORY(test)
ENDIF ()

IF (BRINGAUTO_INSTALL)
    INSTALL(TARGETS modulog DESTINATION .)
    INSTALL(FILES ${AG_BUILT_LIST} DESTINATION .)
ENDIF ()

IF (BRINGAUTO_PACKAGE)
    SET(CPACK_GENERATOR ZIP)
    SET(CPACK_PACKAGE_CONTACT "Martin Hofbauer <martin.hofbauer@bringauto.com>")
    SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Martin Hofbauer <martin.hofbauer@bringauto.com>")
    SET(CPACK_PACKAGE_VERSION ${modulog_VERSION})
    INCLUDE(CPack)
ENDIF ()
